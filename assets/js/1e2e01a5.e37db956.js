"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[9730],{86873:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"4","label":"v4","banner":"unmaintained","badge":false,"noIndex":false,"className":"docs-version-4","isLast":false,"docsSidebars":{"Introduction":[{"type":"link","label":"Centrifugo introduction","href":"/docs/4/getting-started/introduction","docId":"getting-started/introduction","unlisted":false},{"type":"link","label":"Join community","href":"/docs/4/getting-started/community","docId":"getting-started/community","unlisted":false},{"type":"link","label":"Install Centrifugo","href":"/docs/4/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quickstart tutorial","href":"/docs/4/getting-started/quickstart","docId":"getting-started/quickstart","unlisted":false},{"type":"link","label":"Main highlights","href":"/docs/4/getting-started/highlights","docId":"getting-started/highlights","unlisted":false},{"type":"link","label":"Integration guide","href":"/docs/4/getting-started/integration","docId":"getting-started/integration","unlisted":false},{"type":"link","label":"Design overview","href":"/docs/4/getting-started/design","docId":"getting-started/design","unlisted":false},{"type":"link","label":"Ecosystem notes","href":"/docs/4/getting-started/ecosystem","docId":"getting-started/ecosystem","unlisted":false},{"type":"link","label":"Migrating to v4","href":"/docs/4/getting-started/migration_v4","docId":"getting-started/migration_v4","unlisted":false}],"Guides":[{"type":"link","label":"Configure Centrifugo","href":"/docs/4/server/configuration","docId":"server/configuration","unlisted":false},{"type":"link","label":"Server API walkthrough","href":"/docs/4/server/server_api","docId":"server/server_api","unlisted":false},{"type":"link","label":"Client JWT authentication","href":"/docs/4/server/authentication","docId":"server/authentication","unlisted":false},{"type":"link","label":"Channels and namespaces","href":"/docs/4/server/channels","docId":"server/channels","unlisted":false},{"type":"link","label":"Channel permission model","href":"/docs/4/server/channel_permissions","docId":"server/channel_permissions","unlisted":false},{"type":"link","label":"Channel JWT authorization","href":"/docs/4/server/channel_token_auth","docId":"server/channel_token_auth","unlisted":false},{"type":"link","label":"Server-side subscriptions","href":"/docs/4/server/server_subs","docId":"server/server_subs","unlisted":false},{"type":"link","label":"Engines and scalability","href":"/docs/4/server/engines","docId":"server/engines","unlisted":false},{"type":"link","label":"Proxy events to the backend","href":"/docs/4/server/proxy","docId":"server/proxy","unlisted":false},{"type":"link","label":"History and recovery","href":"/docs/4/server/history_and_recovery","docId":"server/history_and_recovery","unlisted":false},{"type":"link","label":"Online presence","href":"/docs/4/server/presence","docId":"server/presence","unlisted":false},{"type":"link","label":"Admin web UI","href":"/docs/4/server/admin_web","docId":"server/admin_web","unlisted":false},{"type":"link","label":"Metrics monitoring","href":"/docs/4/server/monitoring","docId":"server/monitoring","unlisted":false},{"type":"link","label":"Infrastructure tuning","href":"/docs/4/server/infra_tuning","docId":"server/infra_tuning","unlisted":false},{"type":"link","label":"Load balancing","href":"/docs/4/server/load_balancing","docId":"server/load_balancing","unlisted":false},{"type":"link","label":"Configure TLS","href":"/docs/4/server/tls","docId":"server/tls","unlisted":false},{"type":"link","label":"Error and disconnect codes","href":"/docs/4/server/codes","docId":"server/codes","unlisted":false},{"type":"link","label":"Helper CLI commands","href":"/docs/4/server/console_commands","docId":"server/console_commands","unlisted":false}],"Transports":[{"type":"link","label":"Real-time transports","href":"/docs/4/transports/overview","docId":"transports/overview","unlisted":false},{"type":"category","label":"Bidirectional","collapsed":false,"items":[{"type":"link","label":"Client SDK API","href":"/docs/4/transports/client_api","docId":"transports/client_api","unlisted":false},{"type":"link","label":"Client real-time SDKs","href":"/docs/4/transports/client_sdk","docId":"transports/client_sdk","unlisted":false},{"type":"link","label":"WebSocket","href":"/docs/4/transports/websocket","docId":"transports/websocket","unlisted":false},{"type":"link","label":"HTTP streaming","href":"/docs/4/transports/http_stream","docId":"transports/http_stream","unlisted":false},{"type":"link","label":"SSE (EventSource)","href":"/docs/4/transports/sse","docId":"transports/sse","unlisted":false},{"type":"link","label":"SockJS","href":"/docs/4/transports/sockjs","docId":"transports/sockjs","unlisted":false},{"type":"link","label":"WebTransport","href":"/docs/4/transports/webtransport","docId":"transports/webtransport","unlisted":false},{"type":"link","label":"Client protocol","href":"/docs/4/transports/client_protocol","docId":"transports/client_protocol","unlisted":false}],"collapsible":true},{"type":"category","label":"Unidirectional","collapsed":false,"items":[{"type":"link","label":"WebSocket","href":"/docs/4/transports/uni_websocket","docId":"transports/uni_websocket","unlisted":false},{"type":"link","label":"HTTP streaming","href":"/docs/4/transports/uni_http_stream","docId":"transports/uni_http_stream","unlisted":false},{"type":"link","label":"SSE (EventSource)","href":"/docs/4/transports/uni_sse","docId":"transports/uni_sse","unlisted":false},{"type":"link","label":"GRPC","href":"/docs/4/transports/uni_grpc","docId":"transports/uni_grpc","unlisted":false}],"collapsible":true}],"Pro":[{"type":"link","label":"Centrifugo PRO overview","href":"/docs/4/pro/overview","docId":"pro/overview","unlisted":false},{"type":"link","label":"Install and run PRO version","href":"/docs/4/pro/install_and_run","docId":"pro/install_and_run","unlisted":false},{"type":"category","label":"PRO features","collapsed":false,"items":[{"type":"link","label":"User and channel tracing","href":"/docs/4/pro/tracing","docId":"pro/tracing","unlisted":false},{"type":"link","label":"Analytics with ClickHouse","href":"/docs/4/pro/analytics","docId":"pro/analytics","unlisted":false},{"type":"link","label":"Operation throttling","href":"/docs/4/pro/throttling","docId":"pro/throttling","unlisted":false},{"type":"link","label":"Push notification API","href":"/docs/4/pro/push_notifications","docId":"pro/push_notifications","unlisted":false},{"type":"link","label":"User status API","href":"/docs/4/pro/user_status","docId":"pro/user_status","unlisted":false},{"type":"link","label":"Connections API","href":"/docs/4/pro/connections","docId":"pro/connections","unlisted":false},{"type":"link","label":"User blocking API","href":"/docs/4/pro/user_block","docId":"pro/user_block","unlisted":false},{"type":"link","label":"Token revocation API","href":"/docs/4/pro/token_revocation","docId":"pro/token_revocation","unlisted":false},{"type":"link","label":"Channel capabilities","href":"/docs/4/pro/capabilities","docId":"pro/capabilities","unlisted":false},{"type":"link","label":"Channel patterns","href":"/docs/4/pro/channel_patterns","docId":"pro/channel_patterns","unlisted":false},{"type":"link","label":"CEL expressions","href":"/docs/4/pro/cel_expressions","docId":"pro/cel_expressions","unlisted":false},{"type":"link","label":"Faster performance","href":"/docs/4/pro/performance","docId":"pro/performance","unlisted":false},{"type":"link","label":"Singleflight","href":"/docs/4/pro/singleflight","docId":"pro/singleflight","unlisted":false},{"type":"link","label":"Message batching control","href":"/docs/4/pro/client_message_batching","docId":"pro/client_message_batching","unlisted":false},{"type":"link","label":"CPU and RSS stats","href":"/docs/4/pro/process_stats","docId":"pro/process_stats","unlisted":false}],"collapsible":true}]},"docs":{"attributions":{"id":"attributions","title":"Attributions","description":"Landing Page Images"},"faq/faq_index":{"id":"faq/faq_index","title":"Frequently Asked Questions","description":"Answers to popular questions here."},"flow_diagrams":{"id":"flow_diagrams","title":"flow_diagrams","description":"For swimlanes.io:"},"getting-started/client_api":{"id":"getting-started/client_api","title":"Client API showcase","description":"This chapter showcases Centrifugo bidirectional client API capabilities \u2013 i.e. real-time messaging primitives available on a front-end (can be a browser or a mobile device)."},"getting-started/community":{"id":"getting-started/community","title":"Join community","description":"If you find Centrifugo interesting \u2013 please welcome to our community rooms in Telegram (the most active) and Discord:","sidebar":"Introduction"},"getting-started/design":{"id":"getting-started/design","title":"Design overview","description":"Let\'s discuss some architectural and design topics about Centrifugo.","sidebar":"Introduction"},"getting-started/ecosystem":{"id":"getting-started/ecosystem","title":"Ecosystem notes","description":"Some additional notes about our ecosystem which may help you develop with our tech.","sidebar":"Introduction"},"getting-started/highlights":{"id":"getting-started/highlights","title":"Main highlights","description":"At this point you know how to build the simplest real-time app with Centrifugo. Beyond the core PUB/SUB functionality Centrifugo provides more features and primitives to build scalable real-time applications. Let\'s summarize main Centrifugo \u2728highlights\u2728 here. Every point is then extended throughout the documentation.","sidebar":"Introduction"},"getting-started/installation":{"id":"getting-started/installation","title":"Install Centrifugo","description":"Centrifugo server is written in Go language. It\'s an open-source software, the source code is available on Github.","sidebar":"Introduction"},"getting-started/integration":{"id":"getting-started/integration","title":"Integration guide","description":"This chapter aims to help you get started with Centrifugo. We will look at a step-by-step workflow of integrating your application with Centrifugo providing links to relevant parts of this documentation.","sidebar":"Introduction"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Centrifugo introduction","description":"Centrifugo is an open-source scalable real-time messaging server. Centrifugo can instantly deliver messages to application online users connected over supported transports (WebSocket, HTTP-streaming, SSE/EventSource, WebTransport, GRPC, SockJS). Centrifugo has the concept of a channel \u2013 so it\'s a user-facing PUB/SUB server.","sidebar":"Introduction"},"getting-started/migration_v4":{"id":"getting-started/migration_v4","title":"Migrating to v4","description":"Centrifugo v4 development was concentrated around two main things:","sidebar":"Introduction"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Quickstart tutorial \u23f1\ufe0f","description":"In this tutorial we will build a very simple browser application with Centrifugo. Users will connect to Centrifugo over WebSocket, subscribe to a channel, and start receiving all channel publications (messages published to that channel). In our case, we will send a counter value to all channel subscribers to update counter widget in all open browser tabs in real-time.","sidebar":"Introduction"},"pro/analytics":{"id":"pro/analytics","title":"Analytics with ClickHouse","description":"This feature allows exporting information about channel publications, client connections, channel subscriptions,  client operations and push notifications to ClickHouse thus providing an integration with a real-time (with seconds delay) analytics storage. ClickHouse is super fast for analytical queries, simple to operate with and it allows effective data keeping for a window of time. Also, it\'s relatively simple to create a high performance ClickHouse cluster.","sidebar":"Pro"},"pro/capabilities":{"id":"pro/capabilities","title":"Channel capabilities","description":"At this point you know that Centrifugo allows configuring channel permissions on a per-namespace level. When creating a new real-time feature it\'s recommended to create a new namespace for it and configure permissions. To achieve a better channel permission control inside a namespace Centrifugo PRO provides possibility to set capabilities on individual connection basis, or individual channel subscription basis.","sidebar":"Pro"},"pro/cel_expressions":{"id":"pro/cel_expressions","title":"CEL expressions","description":"This PRO feature is under active development, some changes expected here \ud83d\udea7","sidebar":"Pro"},"pro/channel_patterns":{"id":"pro/channel_patterns","title":"Channel patterns","description":"This PRO feature is under active development, some changes expected here \ud83d\udea7","sidebar":"Pro"},"pro/client_message_batching":{"id":"pro/client_message_batching","title":"Message batching control","description":"This PRO feature is under active development, some changes expected here \ud83d\udea7","sidebar":"Pro"},"pro/connections":{"id":"pro/connections","title":"Connections API","description":"Centrifugo PRO offers an extra API call, connections, which enables retrieval of all active sessions (based on user ID or expression) without the need to activate the presence feature for channels. Furthermore, developers can attach any desired JSON payload to a connection that will then be visible in the result of the connections call. It\'s worth noting that this additional meta-information remains hidden from the client-side, unlike the info associated with the connection.","sidebar":"Pro"},"pro/install_and_run":{"id":"pro/install_and_run","title":"Install and run PRO version","description":"Centrifugo PRO is distributed by Centrifugal Labs LTD under commercial license which is different from OSS version. By downloading Centrifugo PRO you automatically accept commercial license terms.","sidebar":"Pro"},"pro/overview":{"id":"pro/overview","title":"Centrifugo PRO overview","description":"Centrifugo PRO is the enhanced version of Centrifugo provided by Centrifugal Labs LTD under commercial license. It\'s packed with a set of unique powerful features that offer exceptional benefits to your business. It provides granular channel permission control, lower CPU utilization on Centrifugo nodes, backend protection from misusing, next level system observability, additional APIs, and more.","sidebar":"Pro"},"pro/performance":{"id":"pro/performance","title":"Faster performance","description":"Centrifugo PRO has performance improvements for several server parts. These improvements can help to reduce tail end-to-end latencies in the application, increase server throughput and/or reduce CPU usage on server machines. Our open-source version has a decent performance by itself, with PRO improvements Cenrifugo steps even further.","sidebar":"Pro"},"pro/process_stats":{"id":"pro/process_stats","title":"CPU and RSS stats","description":"A useful addition of Centrifugo PRO is an ability to show CPU and RSS memory usage of each node in admin web UI.","sidebar":"Pro"},"pro/push_notifications":{"id":"pro/push_notifications","title":"Push notification API","description":"This PRO feature is under active development, some changes expected here \ud83d\udea7","sidebar":"Pro"},"pro/singleflight":{"id":"pro/singleflight","title":"Singleflight","description":"Centrifugo PRO provides an additional boolean option use_singleflight (default false). When this option enabled Centrifugo will automatically try to merge identical requests to history, online presence or presence stats issued at the same time into one real network request. It will do this by using in-memory component called singleflight.","sidebar":"Pro"},"pro/throttling":{"id":"pro/throttling","title":"Operation throttling","description":"The throttling feature allows limiting the number of operations each connection or user can issue during a configured time interval. This is useful to protect the system from misusing, detecting and disconnecting abusive or broken (due to the bug in the frontend application) clients which add unwanted load on a server.","sidebar":"Pro"},"pro/token_revocation":{"id":"pro/token_revocation","title":"Token revocation API","description":"One more protective instrument in Centrifugo PRO is API to manage token revocations.","sidebar":"Pro"},"pro/tracing":{"id":"pro/tracing","title":"User and channel tracing","description":"That\'s a unique thing. The tracing feature of Centrifugo PRO allows attaching to any channel to see all messages flying towards subscribers or attach to a specific user ID to see all user-related events in real-time.","sidebar":"Pro"},"pro/user_block":{"id":"pro/user_block","title":"User blocking API","description":"One additional instrument for making protective actions in Centrifugo PRO is user blocking API which allows blocking a specific user on Centrifugo level.","sidebar":"Pro"},"pro/user_status":{"id":"pro/user_status","title":"User status API","description":"Centrifugo OSS provides a presence feature for channels. It works well (for channels with reasonably small number of active subscribers though), but sometimes you may need a bit different functionality.","sidebar":"Pro"},"server/admin_web":{"id":"server/admin_web","title":"Admin web UI","description":"Centrifugo comes with a built-in admin web interface. It can:","sidebar":"Guides"},"server/authentication":{"id":"server/authentication","title":"Client JWT authentication","description":"To authenticate incoming connection (client) Centrifugo can use JSON Web Token (JWT) passed from the client-side. This way Centrifugo may know the ID of user in your application, also application can pass additional data to Centrifugo inside JWT claims. This chapter describes this authentication mechanism.","sidebar":"Guides"},"server/channel_permissions":{"id":"server/channel_permissions","title":"Channel permission model","description":"When using Centrifugo server API you don\'t need to think about channel permissions at all \u2013 everything is allowed. In server API case, request to Centrifugo must be issued by your application backend \u2013 so you have all the power to check any required permissions before issuing API request to Centrifugo.","sidebar":"Guides"},"server/channel_token_auth":{"id":"server/channel_token_auth","title":"Channel JWT authorization","description":"In the chapter about channel permissions we mentioned that to subscribe on a channel client can provide subscription token. This chapter has more information about the subscription token mechanism in Centrifugo.","sidebar":"Guides"},"server/channels":{"id":"server/channels","title":"Channels and namespaces","description":"Upon connecting to a server clients can subscribe to channels. Channel is one of the core concepts of Centrifugo. Most of the time when integrating Centrifugo you will work with channels and decide what is the best channel configuration for your application.","sidebar":"Guides"},"server/codes":{"id":"server/codes","title":"Error and disconnect codes","description":"This chapter describes error and disconnect codes Centrifugo uses in a client protocol, also error codes which a server API can return in response.","sidebar":"Guides"},"server/configuration":{"id":"server/configuration","title":"Configure Centrifugo","description":"Let\'s look at how Centrifugo can be configured.","sidebar":"Guides"},"server/console_commands":{"id":"server/console_commands","title":"Helper CLI commands","description":"Here is a list of helpful command-line commands that come with Centrifugo executable.","sidebar":"Guides"},"server/engines":{"id":"server/engines","title":"Engines and scalability","description":"The Engine in Centrifugo is responsible for publishing messages between nodes, handle PUB/SUB broker subscriptions, save/retrieve online presence and history data.","sidebar":"Guides"},"server/history_and_recovery":{"id":"server/history_and_recovery","title":"History and recovery","description":"Centrifugo engines can maintain publication history for channels with configured history size and TTL.","sidebar":"Guides"},"server/infra_tuning":{"id":"server/infra_tuning","title":"Infrastructure tuning","description":"As Centrifugo deals with lots of persistent connections your operating system and server infrastructure must be ready for it.","sidebar":"Guides"},"server/load_balancing":{"id":"server/load_balancing","title":"Load balancing","description":"This chapter shows how to deal with persistent connection load balancing.","sidebar":"Guides"},"server/monitoring":{"id":"server/monitoring","title":"Metrics monitoring","description":"Centrifugo supports reporting metrics in Prometheus format and can automatically export metrics to Graphite.","sidebar":"Guides"},"server/presence":{"id":"server/presence","title":"Online presence","description":"The online presence feature of Centrifugo is a powerful tool that allows you to monitor and manage active users in real-time on a specific channel. It provides live data about which users are currently connected to your application.","sidebar":"Guides"},"server/proxy":{"id":"server/proxy","title":"Proxy events to the backend","description":"It\'s possible to proxy some client connection events from Centrifugo to the application backend and react to them in a custom way. For example, it\'s possible to authenticate connection via request from Centrifugo to application backend, refresh client sessions and answer to RPC calls sent by a client over bidirectional connection. Also, you may control subscription and publication permissions using these hooks.","sidebar":"Guides"},"server/server_api":{"id":"server/server_api","title":"Server API walkthrough","description":"Server API provides a way to send various commands to Centrifugo. For example, server API allows publishing messages to channels, get server statistics, etc. There are two kinds of API available at the moment:","sidebar":"Guides"},"server/server_subs":{"id":"server/server_subs","title":"Server-side subscriptions","description":"Centrifugo clients can initiate a subscription to a channel by calling the subscribe method of client API. In most cases, client-side subscriptions is a more flexible and recommended approach since a frontend usually knows which channels it needs to consume at a concrete moment.","sidebar":"Guides"},"server/tls":{"id":"server/tls","title":"Configure TLS","description":"TLS/SSL layer is very important not only for securing your connections but also to increase a","sidebar":"Guides"},"transports/client_api":{"id":"transports/client_api","title":"Client SDK API","description":"Centrifugo has several client SDKs to establish a real-time connection with a server. Centrifugo SDKs use WebSocket as the main data transport and send/receive messages encoded according to our bidirectional protocol. That protocol is built on top of the Protobuf schema (both JSON and binary Protobuf formats are supported). It provides asynchronous communication, sending RPC, multiplexing subscriptions to channels, etc. Client SDK wraps the protocol and exposes a set of APIs to developers.","sidebar":"Transports"},"transports/client_protocol":{"id":"transports/client_protocol","title":"Client protocol","description":"This chapter describes the core concepts of Centrifugo bidirectional client protocol \u2013 concentrating on framing level. If you want to find out details about exposed client API then look at client API document.","sidebar":"Transports"},"transports/client_sdk":{"id":"transports/client_sdk","title":"Client real-time SDKs","description":"In the previous chapter we investigated common principles of Centrifugo client SDK API. Here we will provide a list of available bidirectional connectors you can use to communicate with Centrifugo.","sidebar":"Transports"},"transports/http_stream":{"id":"transports/http_stream","title":"HTTP streaming, with bidirectional emulation","description":"HTTP streaming connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/overview":{"id":"transports/overview","title":"Real-time transports","description":"Centrifugo supports a variety of transports to deliver real-time messages to clients.","sidebar":"Transports"},"transports/sockjs":{"id":"transports/sockjs","title":"SockJS","description":"SockJS is a polyfill browser library which provides HTTP-based fallback transports in case when it\'s not possible to establish Websocket connection. This can happen in old client browsers or because of some proxy behind client and server that cuts of Websocket traffic. You can find more information on SockJS project Github page.","sidebar":"Transports"},"transports/sse":{"id":"transports/sse","title":"SSE (EventSource), with bidirectional emulation","description":"SSE (EventSource) connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/uni_grpc":{"id":"transports/uni_grpc","title":"Unidirectional GRPC","description":"It\'s possible to connect to GRPC unidirectional stream to consume real-time messages from Centrifugo. In this case you need to generate GRPC code for your language on client-side.","sidebar":"Transports"},"transports/uni_http_stream":{"id":"transports/uni_http_stream","title":"Unidirectional HTTP streaming","description":"Default unidirectional HTTP streaming connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/uni_sse":{"id":"transports/uni_sse","title":"Unidirectional SSE (EventSource)","description":"Default unidirectional SSE (EventSource) connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/uni_websocket":{"id":"transports/uni_websocket","title":"Unidirectional WebSocket","description":"Default unidirectional WebSocket connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/websocket":{"id":"transports/websocket","title":"WebSocket","description":"Websocket is the main transport in Centrifugo. It\'s a very efficient low-overhead protocol on top of TCP.","sidebar":"Transports"},"transports/webtransport":{"id":"transports/webtransport","title":"WebTransport","description":"WebTransport is an API offering low-latency, bidirectional, client-server messaging on top of HTTP/3. See Using WebTransport article that gives a good overview of it.","sidebar":"Transports"}}}}')}}]);