"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[2281],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(96540);const o={},a=i.createContext(o);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}},75664:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/introduction","title":"Centrifugo introduction","description":"Centrifugo is an open-source scalable real-time messaging server in a language-agnostic way.","source":"@site/versioned_docs/version-3/getting-started/introduction.md","sourceDirName":"getting-started","slug":"/getting-started/introduction","permalink":"/docs/3/getting-started/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/centrifugal/centrifugal.dev/edit/main/versioned_docs/version-3/getting-started/introduction.md","tags":[],"version":"3","frontMatter":{"id":"introduction","title":"Centrifugo introduction"},"sidebar":"Introduction","next":{"title":"Install Centrifugo","permalink":"/docs/3/getting-started/installation"}}');var o=n(74848),a=n(28453);const s={id:"introduction",title:"Centrifugo introduction"},r=void 0,c={},l=[{value:"Motivation",id:"motivation",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Join community",id:"join-community",level:2}];function d(e){const t={a:"a",admonition:"admonition",h2:"h2",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Centrifugo is an open-source scalable real-time messaging server in a language-agnostic way."}),"\n",(0,o.jsx)(t.admonition,{title:"Real-time?",type:"info",children:(0,o.jsx)(t.p,{children:"By real-time, we indicate a soft real-time. Due to network latencies, garbage collection cycles, and so on, the delay of a delivered message can be up to several hundred milliseconds or higher."})}),"\n",(0,o.jsx)(t.p,{children:"It can be a missing piece in your application architecture to send real-time updates to users. Think chats, live comments, multiplayer games, streaming metrics \u2013 you'll be able to build amazing web and mobile real-time apps with a help of Centrifugo."}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo works in conjunction with applications written in any programming language \u2013 both on the backend and frontend sides. It runs as a standalone service hosted on your hardware and fits well to both monolithic and microservice architectures."}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo is fast and scales well to support millions of concurrent client connections. It provides several real-time transports to choose from and a set of features to simplify building real-time applications."}),"\n",(0,o.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo was born to help applications with a server-side written in a language or a framework without built-in concurrency support. In this case, dealing with persistent connections is a real headache that usually can only be resolved by introducing a shift in the technology stack and spending enough time to create a production-ready solution."}),"\n",(0,o.jsx)(t.p,{children:"For example, frameworks like Django, Flask, Yii, Laravel, Ruby on Rails, and others have poor and not performant support of working with many persistent connections for the real-time messaging task."}),"\n",(0,o.jsx)(t.p,{children:"In this case, Centrifugo is a very straightforward and non-obtrusive way to introduce real-time updates and handle lots of persistent connections without radical changes in application backend architecture. Developers could proceed writing a backend with a favorite language or favorite framework, keep existing architecture \u2013 and just let Centrifugo deal with persistent connections."}),"\n",(0,o.jsx)(t.p,{children:"At the moment, Centrifugo provides some advanced and unique features that can simplify a developer's life and save months of development, even if the application backend is built with the asynchronous concurrent language. One example is that Centrifugo can scale out-of-the-box to many machines with several supported brokers. And there are more things to mention \u2013 see detailed highlights further in the docs."}),"\n",(0,o.jsx)(t.h2,{id:"concepts",children:"Concepts"}),"\n",(0,o.jsx)(t.p,{children:"As mentioned above, Centrifugo runs as a standalone service that cares about handling persistent connections from application users. Application backend and frontend can be written in any programming language. Clients connect to Centrifugo and subscribe to channels."}),"\n",(0,o.jsx)(t.p,{children:"As soon as some event happens application backend can publish a message with event payload into a channel using Centrifugo API. The message will be delivered to all clients currently connected and subscribed to a channel."}),"\n",(0,o.jsx)(t.p,{children:"So Centrifugo is a user-facing PUB/SUB server in a nutshell. Here is a simplified scheme:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Centrifugo scheme",src:n(79101).A+"",width:"1186",height:"626"})}),"\n",(0,o.jsx)(t.h2,{id:"join-community",children:"Join community"}),"\n",(0,o.jsx)(t.p,{children:"We have rooms in Telegram and Discord:"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://t.me/joinchat/ABFVWBE0AhkyyhREoaboXQ",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/Telegram-Group-orange?style=flat&logo=telegram",alt:"Join the chat at https://t.me/joinchat/ABFVWBE0AhkyyhREoaboXQ"})})," \xa0",(0,o.jsx)(t.a,{href:"https://discord.gg/tYgADKx",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/discord/719186998686122046?style=flat&label=Discord&logo=discord",alt:"Join the chat at https://discord.gg/tYgADKx"})})]}),"\n",(0,o.jsx)(t.p,{children:"See you there!"})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},79101:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/scheme_sketch-74c962b2089dc49399e093b1e9812403.png"}}]);