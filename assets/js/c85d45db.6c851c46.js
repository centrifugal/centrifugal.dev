"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[4935],{4148:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"3","label":"v3","banner":"unmaintained","badge":false,"noIndex":false,"className":"docs-version-3","isLast":false,"docsSidebars":{"Introduction":[{"type":"link","label":"Centrifugo introduction","href":"/docs/3/getting-started/introduction","docId":"getting-started/introduction","unlisted":false},{"type":"link","label":"Install Centrifugo","href":"/docs/3/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quickstart tutorial","href":"/docs/3/getting-started/quickstart","docId":"getting-started/quickstart","unlisted":false},{"type":"link","label":"Main highlights","href":"/docs/3/getting-started/highlights","docId":"getting-started/highlights","unlisted":false},{"type":"link","label":"Client API showcase","href":"/docs/3/getting-started/client_api","docId":"getting-started/client_api","unlisted":false},{"type":"link","label":"Integration guide","href":"/docs/3/getting-started/integration","docId":"getting-started/integration","unlisted":false},{"type":"link","label":"Design overview","href":"/docs/3/getting-started/design","docId":"getting-started/design","unlisted":false},{"type":"link","label":"Migrating to v3","href":"/docs/3/getting-started/migration_v3","docId":"getting-started/migration_v3","unlisted":false}],"Guides":[{"type":"link","label":"Configure Centrifugo","href":"/docs/3/server/configuration","docId":"server/configuration","unlisted":false},{"type":"link","label":"Console commands","href":"/docs/3/server/console_commands","docId":"server/console_commands","unlisted":false},{"type":"link","label":"Server API","href":"/docs/3/server/server_api","docId":"server/server_api","unlisted":false},{"type":"link","label":"Client authentication","href":"/docs/3/server/authentication","docId":"server/authentication","unlisted":false},{"type":"link","label":"Channels","href":"/docs/3/server/channels","docId":"server/channels","unlisted":false},{"type":"link","label":"Private channels","href":"/docs/3/server/private_channels","docId":"server/private_channels","unlisted":false},{"type":"link","label":"Server-side subscriptions","href":"/docs/3/server/server_subs","docId":"server/server_subs","unlisted":false},{"type":"link","label":"Engines, scalability","href":"/docs/3/server/engines","docId":"server/engines","unlisted":false},{"type":"link","label":"Proxy to backend","href":"/docs/3/server/proxy","docId":"server/proxy","unlisted":false},{"type":"link","label":"History and recovery","href":"/docs/3/server/history_and_recovery","docId":"server/history_and_recovery","unlisted":false},{"type":"link","label":"Admin web UI","href":"/docs/3/server/admin_web","docId":"server/admin_web","unlisted":false},{"type":"link","label":"Monitoring","href":"/docs/3/server/monitoring","docId":"server/monitoring","unlisted":false},{"type":"link","label":"Infrastructure tuning","href":"/docs/3/server/infra_tuning","docId":"server/infra_tuning","unlisted":false},{"type":"link","label":"Load balancing","href":"/docs/3/server/load_balancing","docId":"server/load_balancing","unlisted":false},{"type":"link","label":"Configure TLS","href":"/docs/3/server/tls","docId":"server/tls","unlisted":false},{"type":"link","label":"Error and disconnect codes","href":"/docs/3/server/codes","docId":"server/codes","unlisted":false}],"Transports":[{"type":"link","label":"Real-time transports","href":"/docs/3/transports/overview","docId":"transports/overview","unlisted":false},{"type":"category","label":"Bidirectional","collapsed":false,"items":[{"type":"link","label":"Client real-time SDKs","href":"/docs/3/transports/client_sdk","docId":"transports/client_sdk","unlisted":false},{"type":"link","label":"WebSocket","href":"/docs/3/transports/websocket","docId":"transports/websocket","unlisted":false},{"type":"link","label":"SockJS","href":"/docs/3/transports/sockjs","docId":"transports/sockjs","unlisted":false},{"type":"link","label":"Client protocol","href":"/docs/3/transports/client_protocol","docId":"transports/client_protocol","unlisted":false}],"collapsible":true},{"type":"category","label":"Unidirectional","collapsed":false,"items":[{"type":"link","label":"WebSocket","href":"/docs/3/transports/uni_websocket","docId":"transports/uni_websocket","unlisted":false},{"type":"link","label":"SSE (EventSource)","href":"/docs/3/transports/uni_sse","docId":"transports/uni_sse","unlisted":false},{"type":"link","label":"HTTP streaming","href":"/docs/3/transports/uni_http_stream","docId":"transports/uni_http_stream","unlisted":false},{"type":"link","label":"GRPC","href":"/docs/3/transports/uni_grpc","docId":"transports/uni_grpc","unlisted":false}],"collapsible":true}],"Pro":[{"type":"link","label":"Centrifugo PRO overview","href":"/docs/3/pro/overview","docId":"pro/overview","unlisted":false},{"type":"link","label":"Install and run PRO version","href":"/docs/3/pro/install_and_run","docId":"pro/install_and_run","unlisted":false},{"type":"category","label":"PRO features","collapsed":false,"items":[{"type":"link","label":"User and channel tracing","href":"/docs/3/pro/tracing","docId":"pro/tracing","unlisted":false},{"type":"link","label":"Analytics with ClickHouse","href":"/docs/3/pro/analytics","docId":"pro/analytics","unlisted":false},{"type":"link","label":"User status","href":"/docs/3/pro/user_status","docId":"pro/user_status","unlisted":false},{"type":"link","label":"Operation throttling","href":"/docs/3/pro/throttling","docId":"pro/throttling","unlisted":false},{"type":"link","label":"User connections API","href":"/docs/3/pro/user_connections","docId":"pro/user_connections","unlisted":false},{"type":"link","label":"User blocking API","href":"/docs/3/pro/user_block","docId":"pro/user_block","unlisted":false},{"type":"link","label":"Token revocation API","href":"/docs/3/pro/token_revocation","docId":"pro/token_revocation","unlisted":false},{"type":"link","label":"Faster performance","href":"/docs/3/pro/performance","docId":"pro/performance","unlisted":false},{"type":"link","label":"Singleflight","href":"/docs/3/pro/singleflight","docId":"pro/singleflight","unlisted":false},{"type":"link","label":"CPU and RSS stats","href":"/docs/3/pro/process_stats","docId":"pro/process_stats","unlisted":false}],"collapsible":true}],"Ecosystem":[{"type":"link","label":"Centrifuge library","href":"/docs/3/ecosystem/centrifuge","docId":"ecosystem/centrifuge","unlisted":false},{"type":"link","label":"Framework integrations","href":"/docs/3/ecosystem/integrations","docId":"ecosystem/integrations","unlisted":false}]},"docs":{"attributions":{"id":"attributions","title":"Attributions","description":"Landing Page Images"},"ecosystem/centrifuge":{"id":"ecosystem/centrifuge","title":"Centrifuge library","description":"Centrifugo is a server built on top of Centrifuge library for Go language.","sidebar":"Ecosystem"},"ecosystem/integrations":{"id":"ecosystem/integrations","title":"Framework integrations","description":"In general, integrating Centrifugo can be done in several steps even without third-party libraries \u2013 see our integration guide. But there are some community-driven projects that provide integration for more native experience or even some additional functionality on top of Centrifugo.","sidebar":"Ecosystem"},"faq/faq_index":{"id":"faq/faq_index","title":"Frequently Asked Questions","description":"Answers to popular questions here."},"flow_diagrams":{"id":"flow_diagrams","title":"flow_diagrams","description":"For swimlines.io:"},"getting-started/client_api":{"id":"getting-started/client_api","title":"Client API showcase","description":"This chapter showcases Centrifugo bidirectional client API capabilities \u2013 i.e. real-time messaging primitives available on a front-end (can be a browser or a mobile device).","sidebar":"Introduction"},"getting-started/design":{"id":"getting-started/design","title":"Design overview","description":"Let\'s discuss some architectural and design topics about Centrifugo.","sidebar":"Introduction"},"getting-started/highlights":{"id":"getting-started/highlights","title":"Main highlights","description":"At this point you know how to build the simplest real-time app with Centrifugo. Beyond the core PUB/SUB functionality Centrifugo provides more features and primitives to build scalable real-time applications. Let\'s summarize main Centrifugo \u2728highlights\u2728 here. Every point is then extended throughout the documentation.","sidebar":"Introduction"},"getting-started/installation":{"id":"getting-started/installation","title":"Install Centrifugo","description":"Centrifugo server is written in Go language. It\'s an open-source software, the source code is available on Github.","sidebar":"Introduction"},"getting-started/integration":{"id":"getting-started/integration","title":"Integration guide","description":"This chapter aims to help you get started with Centrifugo. We will look at a step-by-step workflow of integrating your application with Centrifugo providing links to relevant parts of this documentation.","sidebar":"Introduction"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Centrifugo introduction","description":"Centrifugo is an open-source scalable real-time messaging server in a language-agnostic way.","sidebar":"Introduction"},"getting-started/migration_v3":{"id":"getting-started/migration_v3","title":"Migrating to v3","description":"This chapter aims to help developers migrate from Centrifugo v2 to Centrifugo v3. Migration should mostly affect the backend part only, so you won\'t need to change the code of your frontend applications at all. In most cases, all you should do is adapt Centrifugo configuration to match v3 changes and redeploy Centrifugo using v3 build instead of v2.","sidebar":"Introduction"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Quickstart tutorial \u23f1\ufe0f","description":"Here we will build a very simple browser application with Centrifugo. It works in a way that users connect to Centrifugo over WebSocket, subscribe to a channel, and start receiving all messages published to that channel. In our case, we will send a counter value to all channel subscribers to update it in all open browser tabs in real-time.","sidebar":"Introduction"},"pro/analytics":{"id":"pro/analytics","title":"Analytics with ClickHouse","description":"This feature allows exporting information about connections, subscriptions and client operations to ClickHouse thus providing an integration with a real-time (with seconds delay) analytics storage. ClickHouse is super fast and simple to operate with, and it allows effective data keeping for a window of time.","sidebar":"Pro"},"pro/db_namespaces":{"id":"pro/db_namespaces","title":"Database-driven namespace configuration","description":"Centrifugo PRO supports database-driven namespace configuration. This means that instead of configuring namespaces in a configuration file you will be able to configure them in admin web UI. It\'s also possible to select a namespace for automatic personal channel subscription."},"pro/install_and_run":{"id":"pro/install_and_run","title":"Install and run PRO version","description":"Centrifugo PRO is distributed under commercial license which is different from OSS version. By downloading Centrifugo PRO you automatically accept license terms.","sidebar":"Pro"},"pro/overview":{"id":"pro/overview","title":"Centrifugo PRO overview","description":"Centrifugo PRO is an extended version of Centrifugo with a set of additional features. These features can provide your business with unique benefits \u2013 drastically save development time, reduce resource usage on a server, protect your backend from misusing, and put the system observability to the next level.","sidebar":"Pro"},"pro/performance":{"id":"pro/performance","title":"Faster performance","description":"Centrifugo PRO has performance improvements for several server parts. These improvements can help to reduce tail end-to-end latencies in application, increase server throughput and/or reduce CPU usage on server machines.","sidebar":"Pro"},"pro/process_stats":{"id":"pro/process_stats","title":"CPU and RSS stats","description":"A useful addition of Centrifugo PRO is an ability to show CPU and RSS memory usage of each node in admin web UI.","sidebar":"Pro"},"pro/singleflight":{"id":"pro/singleflight","title":"Singleflight","description":"Centrifugo PRO provides an additional boolean option use_singleflight (default false). When this option enabled Centrifugo will automatically try to merge identical requests to history, online presence or presence stats issued at the same time into one real network request.","sidebar":"Pro"},"pro/throttling":{"id":"pro/throttling","title":"Operation throttling","description":"The throttling feature allows limiting the number of operations each user can issue during a configured time interval. This is useful to protect the system from misusing or protect it from a bug in the application frontend code.","sidebar":"Pro"},"pro/token_revocation":{"id":"pro/token_revocation","title":"Token revocation API","description":"One more protective instrument in Centrifugo PRO is API to manage token revocations.","sidebar":"Pro"},"pro/tracing":{"id":"pro/tracing","title":"User and channel tracing","description":"That\'s a unique thing. The tracing feature of Centrifugo PRO allows attaching to any channel to see all messages flying towards subscribers or attach to a specific user ID to see all user-related events in real-time.","sidebar":"Pro"},"pro/user_block":{"id":"pro/user_block","title":"User blocking API","description":"In addition to detailed observability properties Centrifugo PRO provides instruments for performing protective actions. One of such instruments is user blocking API which allows blocking a specific user in Centrifugo.","sidebar":"Pro"},"pro/user_connections":{"id":"pro/user_connections","title":"User connections API","description":"Centrifugo PRO provides an additional API call userconnections. It allows getting all active sessions of the user (by user ID) without turning on presence feature for channels at all. It\'s also possible to attach any JSON payload to a connection which will be then visible in the result of userconnections call. The important thing is that this additional meta information won\'t be exposed to a client-side (unlike connection info for example).","sidebar":"Pro"},"pro/user_status":{"id":"pro/user_status","title":"User status","description":"Centrifugo OSS provides a presence feature for channels. It works well (for channels with reasonably small number of active subscribers though), but sometimes you may need a bit different functionality.","sidebar":"Pro"},"server/admin_web":{"id":"server/admin_web","title":"Admin web UI","description":"Centrifugo comes with builtin admin web interface. It can:","sidebar":"Guides"},"server/authentication":{"id":"server/authentication","title":"Client authentication","description":"To authenticate incoming connection (client) Centrifugo can use JSON Web Token (JWT) passed from the client-side. This way Centrifugo may know the ID of user in your application, also application can pass additional data to Centrifugo inside JWT claims. This chapter describes this authentication mechanism.","sidebar":"Guides"},"server/channels":{"id":"server/channels","title":"Channels","description":"Channel is a route for publications. Clients can be subscribed to a channel to receive real-time messages published to a channel \u2013 new publications and join/leave events (if enabled for a channel namespace). A channel subscriber can also ask for a channel presence or channel history information (if enabled for a channel namespace).","sidebar":"Guides"},"server/codes":{"id":"server/codes","title":"Error and disconnect codes","description":"This chapter describes error and disconnect codes Centrifugo uses in a client protocol, also error codes which a server API can return in response.","sidebar":"Guides"},"server/configuration":{"id":"server/configuration","title":"Configure Centrifugo","description":"Let\'s look at how Centrifugo can be configured.","sidebar":"Guides"},"server/console_commands":{"id":"server/console_commands","title":"Console commands","description":"Here is a list of console commands that come with Centrifugo executable.","sidebar":"Guides"},"server/engines":{"id":"server/engines","title":"Engines, scalability","description":"The Engine in Centrifugo is responsible for publishing messages between nodes, handle PUB/SUB broker subscriptions, save/retrieve online presence and history data.","sidebar":"Guides"},"server/history_and_recovery":{"id":"server/history_and_recovery","title":"History and recovery","description":"Centrifugo engines can maintain publication history for channels with configured history size and TTL.","sidebar":"Guides"},"server/infra_tuning":{"id":"server/infra_tuning","title":"Infrastructure tuning","description":"As Centrifugo deals with lots of persistent connections your operating system and server infrastructure must be ready for it.","sidebar":"Guides"},"server/load_balancing":{"id":"server/load_balancing","title":"Load balancing","description":"This chapter shows how to deal with persistent connection load balancing.","sidebar":"Guides"},"server/monitoring":{"id":"server/monitoring","title":"Monitoring","description":"Centrifugo supports reporting metrics in Prometheus format and can automatically export metrics to Graphite.","sidebar":"Guides"},"server/private_channels":{"id":"server/private_channels","title":"Private channels","description":"In the channels chapter we mentioned private channels. This chapter has more information about the private channel mechanism in Centrifugo.","sidebar":"Guides"},"server/proxy":{"id":"server/proxy","title":"Proxy to backend","description":"It\'s possible to proxy some client connection events from Centrifugo to the application backend and react to them in a custom way. For example, it\'s possible to authenticate connection via request from Centrifugo to application backend, refresh client sessions and answer to RPC calls sent by a client over bidirectional connection.","sidebar":"Guides"},"server/server_api":{"id":"server/server_api","title":"Server API","description":"Server API is a way to send various commands to Centrifugo. For example, server API allows publishing messages to channels, get server statistics, etc. There are two kinds of API available at the moment:","sidebar":"Guides"},"server/server_subs":{"id":"server/server_subs","title":"Server-side subscriptions","description":"Centrifugo clients can initiate a subscription to a channel by calling the Subscribe method of client protocol. In most cases, this is the most flexible approach since a client-side usually knows which channels it needs to consume at a concrete moment. But in some situations, all you need is to subscribe your connections to several channels on a server-side at the moment of connection establishment. So client effectively starts receiving publications from those channels without calling the Subscribe method at all.","sidebar":"Guides"},"server/tls":{"id":"server/tls","title":"Configure TLS","description":"TLS/SSL layer is very important not only for securing your connections but also to increase a","sidebar":"Guides"},"transports/client_protocol":{"id":"transports/client_protocol","title":"Client protocol","description":"This chapter describes internal bidirectional client-server protocol in details to help developers build new client libraries or understand how existing client connectors work.","sidebar":"Transports"},"transports/client_sdk":{"id":"transports/client_sdk","title":"Client real-time SDKs","description":"The following SDKs allow connecting to Centrifugo from the application frontend:","sidebar":"Transports"},"transports/overview":{"id":"transports/overview","title":"Real-time transports","description":"Centrifugo supports a variety of transports to deliver real-time messages to clients.","sidebar":"Transports"},"transports/sockjs":{"id":"transports/sockjs","title":"SockJS","description":"SockJS is a polyfill browser library which provides HTTP-based fallback transports in case when it\'s not possible to establish Websocket connection. This can happen in old client browsers or because of some proxy behind client and server that cuts of Websocket traffic. You can find more information on SockJS project Github page.","sidebar":"Transports"},"transports/uni_grpc":{"id":"transports/uni_grpc","title":"Unidirectional GRPC","description":"It\'s possible to connect to GRPC unidirectional stream to consume real-time messages from Centrifugo. In this case you need to generate GRPC code for your language on client-side.","sidebar":"Transports"},"transports/uni_http_stream":{"id":"transports/uni_http_stream","title":"Unidirectional HTTP streaming","description":"Default unidirectional HTTP streaming connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/uni_sse":{"id":"transports/uni_sse","title":"Unidirectional SSE (EventSource)","description":"Default unidirectional SSE (EventSource) connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/uni_websocket":{"id":"transports/uni_websocket","title":"Unidirectional WebSocket","description":"Default unidirectional WebSocket connection endpoint in Centrifugo is:","sidebar":"Transports"},"transports/websocket":{"id":"transports/websocket","title":"WebSocket","description":"Websocket is the main transport in Centrifugo. It\'s a very efficient low-overhead protocol on top of TCP.","sidebar":"Transports"}}}}')}}]);