"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[4092],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var i=s(96540);const t={},o=i.createContext(t);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(o.Provider,{value:n},e.children)}},47988:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"transports/uni_websocket","title":"Unidirectional WebSocket","description":"While WebSocket is bidirectional transport in its nature Centrifugo provides its unidirectional version too to give developers more choice in transports when using the unidirectional approach.","source":"@site/docs/transports/uni_websocket.md","sourceDirName":"transports","slug":"/transports/uni_websocket","permalink":"/docs/transports/uni_websocket","draft":false,"unlisted":false,"editUrl":"https://github.com/centrifugal/centrifugal.dev/edit/main/docs/transports/uni_websocket.md","tags":[],"version":"current","frontMatter":{"id":"uni_websocket","title":"Unidirectional WebSocket","sidebar_label":"WebSocket"},"sidebar":"Transports","previous":{"title":"Unidirectional protocol","permalink":"/docs/transports/uni_client_protocol"},"next":{"title":"HTTP streaming","permalink":"/docs/transports/uni_http_stream"}}');var t=s(74848),o=s(28453);const c={id:"uni_websocket",title:"Unidirectional WebSocket",sidebar_label:"WebSocket"},r=void 0,a={},l=[{value:"How to enable",id:"how-to-enable",level:2},{value:"Default endpoint",id:"default-endpoint",level:2},{value:"Send connect request",id:"send-connect-request",level:2},{value:"Supported data formats",id:"supported-data-formats",level:2},{value:"Ping",id:"ping",level:2},{value:"<code>uni_websocket</code>",id:"uni_websocket",level:2},{value:"<code>uni_websocket.enabled</code>",id:"uni_websocketenabled",level:3},{value:"<code>uni_websocket.message_size_limit</code>",id:"uni_websocketmessage_size_limit",level:3},{value:"<code>uni_websocket.join_push_messages</code>",id:"uni_websocketjoin_push_messages",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"While WebSocket is bidirectional transport in its nature Centrifugo provides its unidirectional version too to give developers more choice in transports when using the unidirectional approach."}),"\n",(0,t.jsx)(n.h2,{id:"how-to-enable",children:"How to enable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"title=config.json",children:'{\n  "uni_websocket": {\n    "enabled": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"default-endpoint",children:"Default endpoint"}),"\n",(0,t.jsx)(n.p,{children:"Default unidirectional WebSocket connection endpoint in Centrifugo is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"/connection/uni_websocket\n"})}),"\n",(0,t.jsx)(n.h2,{id:"send-connect-request",children:"Send connect request"}),"\n",(0,t.jsxs)(n.p,{children:["Once connection established you must pass ",(0,t.jsx)(n.a,{href:"/docs/transports/uni_client_protocol#connectrequest",children:"ConnectRequest"})," as first WebSocket message to server."]}),"\n",(0,t.jsx)(n.h2,{id:"supported-data-formats",children:"Supported data formats"}),"\n",(0,t.jsx)(n.p,{children:"JSON"}),"\n",(0,t.jsx)(n.h2,{id:"ping",children:"Ping"}),"\n",(0,t.jsxs)(n.p,{children:["Centrifugo uses empty commands (",(0,t.jsx)(n.code,{children:"{}"})," in JSON case) as pings for unidirectional WS. You can ignore such messages or use them to detect broken connections (nothing received from a server for a long time)."]}),"\n",(0,t.jsx)(n.h2,{id:"uni_websocket",children:(0,t.jsx)(n.code,{children:"uni_websocket"})}),"\n",(0,t.jsx)(n.h3,{id:"uni_websocketenabled",children:(0,t.jsx)(n.code,{children:"uni_websocket.enabled"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean, default: ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Enables unidirectional WebSocket endpoint."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="config.json"',children:'{\n  "uni_websocket": {\n    "enabled": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"uni_websocketmessage_size_limit",children:(0,t.jsx)(n.code,{children:"uni_websocket.message_size_limit"})}),"\n",(0,t.jsx)(n.p,{children:"Default: 65536 (64KB)"}),"\n",(0,t.jsx)(n.p,{children:"Maximum allowed size of a first connect message received from WebSocket connection in bytes."}),"\n",(0,t.jsx)(n.h3,{id:"uni_websocketjoin_push_messages",children:(0,t.jsx)(n.code,{children:"uni_websocket.join_push_messages"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean. Default: ",(0,t.jsx)(n.code,{children:"false"}),". New in Centrifugo v6.0.3"]}),"\n",(0,t.jsx)(n.p,{children:"Once the option enabled, Centrifugo can join different messages going through unidirectional WebSocket into a single websocket frame. The messages are joined using the same approach as Centrifugo uses for bidirectional protocol. This means that for JSON case messages are joined with new line."}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsxs)(n.p,{children:["In other words, you can benefit from message batching and less system calls (which is positive for server CPU usage). But your client side must be prepared to decode the WebSocket message into separate ",(0,t.jsx)(n.code,{children:"Push"})," messages: For JSON case split by ",(0,t.jsx)(n.code,{children:"\\n"}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const messages = data.trim().split('\\n').map(r => JSON.parse(r));\n"})}),(0,t.jsxs)(n.p,{children:["Note, ",(0,t.jsx)(n.code,{children:"trim"})," is important since message may end on ",(0,t.jsx)(n.code,{children:"\\n"})," too: ",(0,t.jsx)(n.code,{children:"{}\\n{}\\n"}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.p,{children:["Let's connect to a unidirectional WebSocket endpoint using ",(0,t.jsx)(n.a,{href:"https://github.com/websockets/wscat",children:"wscat"})," tool \u2013 it allows connecting to WebSocket servers interactively from a terminal."]}),"\n",(0,t.jsxs)(n.p,{children:["First, run Centrifugo with ",(0,t.jsx)(n.code,{children:"uni_websocket"})," enabled. Also let's enable automatic personal channel subscriptions for users. Configuration example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="config.json"',children:'{\n  "client": {\n    "token": {\n      "hmac_secret_key": "secret"\n    },\n    "subscribe_to_user_personal_channel": {\n      "enabled": true\n    }\n  },\n  "uni_websocket": {\n    "enabled": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Run Centrifugo:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"./centrifugo -c config.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"In another terminal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u276f ./centrifugo gentoken -c config.json -u test_user\nHMAC SHA-256 JWT for user test_user with expiration TTL 168h0m0s:\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0X3VzZXIiLCJleHAiOjE2MzAxMzAxNzB9.u7anX-VYXywX1p1lv9UC9CAu04vpA6LgG5gsw5lz1Iw\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Install ",(0,t.jsx)(n.a,{href:"https://github.com/websockets/wscat",children:"wscat"})," and run:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'wscat -c "ws://localhost:8000/connection/uni_websocket"\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will establish a connection with a server and you then can send connect command to a server:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\u276f wscat -c "ws://localhost:8000/connection/uni_websocket"\n\nConnected (press CTRL+C to quit)\n> {"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0X3VzZXIiLCJleHAiOjE2NTY1MDMwNDV9.3UYL-UCUBp27TybeBK7Z0OenwdsKwCMRe46fuEjJnzI", "subs": {"abc": {}}}\n< {"connect":{"client":"bfd28799-b958-4791-b9e9-b011eaef68c1","version":"0.0.0","subs":{"#test_user":{}},"expires":true,"ttl":604407,"ping":25,"session":"57b1287b-44ec-45c8-93fc-696c5294af25"}}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The connection will receive server pings (empty commands ",(0,t.jsx)(n.code,{children:"{}"}),") periodically. You can try to publish something to ",(0,t.jsx)(n.code,{children:"#test_user"})," or ",(0,t.jsx)(n.code,{children:"abc"})," channels (using Centrifugo server API or using admin UI) \u2013 and the message should come to the connection we just established."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);