"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[2787],{28453:(e,i,t)=>{t.d(i,{R:()=>d,x:()=>l});var n=t(96540);const r={},s=n.createContext(r);function d(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(s.Provider,{value:i},e.children)}},88242:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"pro/distributed_rate_limit","title":"Distributed rate limit API","description":"In addition to connection operation rate limiting features Centrifugo PRO provides a generic high precision rate limiting API. It may be used for custom quota managing tasks not even related to real-time connections. Its distributed nature allows managing quotas across different instances of your application backend.","source":"@site/versioned_docs/version-5/pro/distributed_rate_limit.md","sourceDirName":"pro","slug":"/pro/distributed_rate_limit","permalink":"/docs/5/pro/distributed_rate_limit","draft":false,"unlisted":false,"editUrl":"https://github.com/centrifugal/centrifugal.dev/edit/main/versioned_docs/version-5/pro/distributed_rate_limit.md","tags":[],"version":"5","frontMatter":{"id":"distributed_rate_limit","title":"Distributed rate limit API"}}');var r=t(74848),s=t(28453);const d={id:"distributed_rate_limit",title:"Distributed rate limit API"},l=void 0,o={},c=[{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"API description",id:"api-description",level:2},{value:"rate_limit request",id:"rate_limit-request",level:3},{value:"rate_limit result",id:"rate_limit-result",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"In addition to connection operation rate limiting features Centrifugo PRO provides a generic high precision rate limiting API. It may be used for custom quota managing tasks not even related to real-time connections. Its distributed nature allows managing quotas across different instances of your application backend."}),"\n",(0,r.jsxs)(i.p,{children:["The original reason why we decided to ship this as part of our PRO version APIs was the desire to simplify our PRO users the implementation of per-user push notification limits when using ",(0,r.jsx)(i.a,{href:"/docs/5/pro/push_notifications",children:"Push Notification API"}),". But you are free to use the API for other custom needs as well."]}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"Centrifugo distributed rate limiting is a high performance zero-configuration Redis-based token bucket with milliseconds precision. Zero configuration in this case means that you don't have to preconfigure buckets in Centrifugo \u2013 bucket configuration is a part of request to check allowed limits."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:'curl -X POST http://localhost:8000/api/rate_limit \\\n-H "Authorization: apikey <KEY>" \\\n-d @- <<\'EOF\'\n\n{\n    "key": "rate_limit_test",\n    "interval": 60000,\n    "rate": 10\n}\nEOF\n'})}),"\n",(0,r.jsx)(i.p,{children:"Example result:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'{\n    "result": {\n        "allowed": true,\n        "tokens_left": 9\n    }\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"Or, when no tokens left in a bucket:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'{\n    "result": {\n        "allowed": false,\n        "tokens_left": 0,\n        "allowed_in": 5208,\n        "server_time": 1694627573210,\n    }\n}\n'})}),"\n",(0,r.jsxs)(i.p,{children:["In your app code call ",(0,r.jsx)(i.code,{children:"rate_limit"})," API of Centrifugo PRO every time some action is executed and check ",(0,r.jsx)(i.code,{children:"allowed"})," flag to allow or discard the action."]}),"\n",(0,r.jsxs)(i.p,{children:["Centrifugo PRO also returns ",(0,r.jsx)(i.code,{children:"allowed_in"})," and ",(0,r.jsx)(i.code,{children:"server_time"})," fields to help understanding when action will be allowed. These two fields are only appended when ",(0,r.jsx)(i.code,{children:"tokens_left"})," are less than requested ",(0,r.jsx)(i.code,{children:"score"}),". ",(0,r.jsx)(i.code,{children:"allowed_in"})," + ",(0,r.jsx)(i.code,{children:"server_time"})," will provide you a timestamp in the future (in milliseconds) when action is possible to be executed. So you can delay next action execution till that time if possible."]}),"\n",(0,r.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(i.p,{children:"To enable distributed rate limiter:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",metastring:'title="config.json"',children:'{\n  ...\n  "distributed_rate_limit": {\n    "enabled": true,\n    "redis_address": "localhost:6379"\n  }  \n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"Note, that just like most of other features in Centrifugo it's possible to configure Redis shards here or use Redis Cluster."}),"\n",(0,r.jsx)(i.h2,{id:"api-description",children:"API description"}),"\n",(0,r.jsx)(i.p,{children:"Now let's look at API description."}),"\n",(0,r.jsx)(i.h3,{id:"rate_limit-request",children:"rate_limit request"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Field"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"key"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"string"})}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"Key for a bucket - you can construct keys whatever way you like"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"interval"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"Interval in milliseconds"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"rate"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"Allowed rate per provided interval"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"score"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"Score for the current action, if not provided the default score 1 is used"})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"rate_limit-result",children:"rate_limit result"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Field Name"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"allowed"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"bool"})}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"Whether desired action is allowed at this point in time"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"tokens_left"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"How many tokens left in a bucket"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"allowed_in"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"Milliseconds till desired score will be allowed again"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"server_time"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"integer"})}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"Server time as Unix epoch in milliseconds used to calculate result"})]})]})]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);