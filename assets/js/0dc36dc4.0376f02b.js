"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[8990],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(96540);const o={},a=i.createContext(o);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},76670:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/introduction","title":"Centrifugo introduction","description":"Centrifugo is an open-source scalable real-time messaging server. Centrifugo can instantly deliver messages to application online users connected over supported transports (WebSocket, HTTP-streaming, SSE/EventSource, WebTransport, GRPC, SockJS). Centrifugo has the concept of a channel \u2013 so it\'s a user-facing PUB/SUB server.","source":"@site/versioned_docs/version-4/getting-started/introduction.md","sourceDirName":"getting-started","slug":"/getting-started/introduction","permalink":"/docs/4/getting-started/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/centrifugal/centrifugal.dev/edit/main/versioned_docs/version-4/getting-started/introduction.md","tags":[],"version":"4","frontMatter":{"id":"introduction","title":"Centrifugo introduction"},"sidebar":"Introduction","next":{"title":"Join community","permalink":"/docs/4/getting-started/community"}}');var o=n(74848),a=n(28453);const r={id:"introduction",title:"Centrifugo introduction"},s=void 0,c={},l=[{value:"Background",id:"background",level:2}];function d(e){const t={admonition:"admonition",h2:"h2",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("img",{src:"/img/logo_animated_no_accel.svg",width:"100px",height:"100px",align:"left",style:{marginRight:"10px",float:"left"}}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo is an open-source scalable real-time messaging server. Centrifugo can instantly deliver messages to application online users connected over supported transports (WebSocket, HTTP-streaming, SSE/EventSource, WebTransport, GRPC, SockJS). Centrifugo has the concept of a channel \u2013 so it's a user-facing PUB/SUB server."}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo is language-agnostic and can be used to build chat apps, live comments, multiplayer games, real-time data visualizations, collaborative tools, etc. in combination with any backend. It is well suited for modern architectures and allows decoupling the business logic from the real-time transport layer."}),"\n",(0,o.jsx)(t.p,{children:"Several official client SDKs for browser and mobile development wrap the bidirectional protocol. In addition, Centrifugo supports a unidirectional approach for simple use cases with no SDK dependency."}),"\n",(0,o.jsx)(t.admonition,{title:"Real-time?",type:"info",children:(0,o.jsx)(t.p,{children:"By real-time, we indicate a soft real-time. Due to network latencies, garbage collection cycles, and so on, the delay of a delivered message can be up to several hundred milliseconds or higher."})}),"\n",(0,o.jsx)(t.h2,{id:"background",children:"Background"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:n(96453).A+"",width:"2000",height:"1068"})}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo was born a decade ago to help applications with a server-side written in a language or a framework without built-in concurrency support. In this case, dealing with persistent connections is a real headache that usually can only be resolved by introducing a shift in the technology stack and spending time to create a production-ready solution."}),"\n",(0,o.jsx)(t.p,{children:"For example, frameworks like Django, Flask, Yii, Laravel, Ruby on Rails, and others have poor or not really performant support of working with many persistent connections for the real-time messaging tasks."}),"\n",(0,o.jsx)(t.p,{children:"In this case, Centrifugo is a straightforward and non-obtrusive way to introduce real-time updates and handle lots of persistent connections without radical changes in the application backend architecture. Developers could proceed writing the application backend with a favorite language or favorite framework, keep existing architecture \u2013 and just let Centrifugo deal with persistent connections and be a real-time messaging transport layer."}),"\n",(0,o.jsx)(t.p,{children:"These days Centrifugo provides some advanced and unique features that can simplify a developer's life and save months of development. Even if the application backend is built with the asynchronous concurrent language. One example is that Centrifugo has built-in support for scalability to many machines to handle more connections and still making sure channel subscribers on different Centrifugo nodes receive all the publications."}),"\n",(0,o.jsx)(t.p,{children:"Centrifugo fits well modern architectures and may be a universal real-time component regardless of the application technology stack. There are more things to mention, the documentation uncovers them step by step."})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},96453:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/bg_cat-4454fbaae0446c3b1964e06821dd378b.jpg"}}]);